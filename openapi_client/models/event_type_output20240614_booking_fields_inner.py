# coding: utf-8

"""
    Cal.com API v2

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
from pydantic import BaseModel, ConfigDict, Field, StrictStr, ValidationError, field_validator
from typing import Any, List, Optional
from openapi_client.models.address_field_output20240614 import AddressFieldOutput20240614
from openapi_client.models.boolean_field_output20240614 import BooleanFieldOutput20240614
from openapi_client.models.checkbox_group_field_output20240614 import CheckboxGroupFieldOutput20240614
from openapi_client.models.email_default_field_output20240614 import EmailDefaultFieldOutput20240614
from openapi_client.models.guests_default_field_output20240614 import GuestsDefaultFieldOutput20240614
from openapi_client.models.location_default_field_output20240614 import LocationDefaultFieldOutput20240614
from openapi_client.models.multi_email_field_output20240614 import MultiEmailFieldOutput20240614
from openapi_client.models.multi_select_field_output20240614 import MultiSelectFieldOutput20240614
from openapi_client.models.name_default_field_output20240614 import NameDefaultFieldOutput20240614
from openapi_client.models.notes_default_field_output20240614 import NotesDefaultFieldOutput20240614
from openapi_client.models.number_field_output20240614 import NumberFieldOutput20240614
from openapi_client.models.phone_field_output20240614 import PhoneFieldOutput20240614
from openapi_client.models.radio_group_field_output20240614 import RadioGroupFieldOutput20240614
from openapi_client.models.reschedule_reason_default_field_output20240614 import RescheduleReasonDefaultFieldOutput20240614
from openapi_client.models.select_field_output20240614 import SelectFieldOutput20240614
from openapi_client.models.text_area_field_output20240614 import TextAreaFieldOutput20240614
from openapi_client.models.text_field_output20240614 import TextFieldOutput20240614
from openapi_client.models.title_default_field_output20240614 import TitleDefaultFieldOutput20240614
from pydantic import StrictStr, Field
from typing import Union, List, Set, Optional, Dict
from typing_extensions import Literal, Self

EVENTTYPEOUTPUT20240614BOOKINGFIELDSINNER_ONE_OF_SCHEMAS = ["AddressFieldOutput20240614", "BooleanFieldOutput20240614", "CheckboxGroupFieldOutput20240614", "EmailDefaultFieldOutput20240614", "GuestsDefaultFieldOutput20240614", "LocationDefaultFieldOutput20240614", "MultiEmailFieldOutput20240614", "MultiSelectFieldOutput20240614", "NameDefaultFieldOutput20240614", "NotesDefaultFieldOutput20240614", "NumberFieldOutput20240614", "PhoneFieldOutput20240614", "RadioGroupFieldOutput20240614", "RescheduleReasonDefaultFieldOutput20240614", "SelectFieldOutput20240614", "TextAreaFieldOutput20240614", "TextFieldOutput20240614", "TitleDefaultFieldOutput20240614"]

class EventTypeOutput20240614BookingFieldsInner(BaseModel):
    """
    EventTypeOutput20240614BookingFieldsInner
    """
    # data type: NameDefaultFieldOutput20240614
    oneof_schema_1_validator: Optional[NameDefaultFieldOutput20240614] = None
    # data type: EmailDefaultFieldOutput20240614
    oneof_schema_2_validator: Optional[EmailDefaultFieldOutput20240614] = None
    # data type: LocationDefaultFieldOutput20240614
    oneof_schema_3_validator: Optional[LocationDefaultFieldOutput20240614] = None
    # data type: RescheduleReasonDefaultFieldOutput20240614
    oneof_schema_4_validator: Optional[RescheduleReasonDefaultFieldOutput20240614] = None
    # data type: TitleDefaultFieldOutput20240614
    oneof_schema_5_validator: Optional[TitleDefaultFieldOutput20240614] = None
    # data type: NotesDefaultFieldOutput20240614
    oneof_schema_6_validator: Optional[NotesDefaultFieldOutput20240614] = None
    # data type: GuestsDefaultFieldOutput20240614
    oneof_schema_7_validator: Optional[GuestsDefaultFieldOutput20240614] = None
    # data type: PhoneFieldOutput20240614
    oneof_schema_8_validator: Optional[PhoneFieldOutput20240614] = None
    # data type: AddressFieldOutput20240614
    oneof_schema_9_validator: Optional[AddressFieldOutput20240614] = None
    # data type: TextFieldOutput20240614
    oneof_schema_10_validator: Optional[TextFieldOutput20240614] = None
    # data type: NumberFieldOutput20240614
    oneof_schema_11_validator: Optional[NumberFieldOutput20240614] = None
    # data type: TextAreaFieldOutput20240614
    oneof_schema_12_validator: Optional[TextAreaFieldOutput20240614] = None
    # data type: SelectFieldOutput20240614
    oneof_schema_13_validator: Optional[SelectFieldOutput20240614] = None
    # data type: MultiSelectFieldOutput20240614
    oneof_schema_14_validator: Optional[MultiSelectFieldOutput20240614] = None
    # data type: MultiEmailFieldOutput20240614
    oneof_schema_15_validator: Optional[MultiEmailFieldOutput20240614] = None
    # data type: CheckboxGroupFieldOutput20240614
    oneof_schema_16_validator: Optional[CheckboxGroupFieldOutput20240614] = None
    # data type: RadioGroupFieldOutput20240614
    oneof_schema_17_validator: Optional[RadioGroupFieldOutput20240614] = None
    # data type: BooleanFieldOutput20240614
    oneof_schema_18_validator: Optional[BooleanFieldOutput20240614] = None
    actual_instance: Optional[Union[AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614]] = None
    one_of_schemas: Set[str] = { "AddressFieldOutput20240614", "BooleanFieldOutput20240614", "CheckboxGroupFieldOutput20240614", "EmailDefaultFieldOutput20240614", "GuestsDefaultFieldOutput20240614", "LocationDefaultFieldOutput20240614", "MultiEmailFieldOutput20240614", "MultiSelectFieldOutput20240614", "NameDefaultFieldOutput20240614", "NotesDefaultFieldOutput20240614", "NumberFieldOutput20240614", "PhoneFieldOutput20240614", "RadioGroupFieldOutput20240614", "RescheduleReasonDefaultFieldOutput20240614", "SelectFieldOutput20240614", "TextAreaFieldOutput20240614", "TextFieldOutput20240614", "TitleDefaultFieldOutput20240614" }

    model_config = ConfigDict(
        validate_assignment=True,
        protected_namespaces=(),
    )


    def __init__(self, *args, **kwargs) -> None:
        if args:
            if len(args) > 1:
                raise ValueError("If a position argument is used, only 1 is allowed to set `actual_instance`")
            if kwargs:
                raise ValueError("If a position argument is used, keyword arguments cannot be used.")
            super().__init__(actual_instance=args[0])
        else:
            super().__init__(**kwargs)

    @field_validator('actual_instance')
    def actual_instance_must_validate_oneof(cls, v):
        instance = EventTypeOutput20240614BookingFieldsInner.model_construct()
        error_messages = []
        match = 0
        # validate data type: NameDefaultFieldOutput20240614
        if not isinstance(v, NameDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `NameDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: EmailDefaultFieldOutput20240614
        if not isinstance(v, EmailDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `EmailDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: LocationDefaultFieldOutput20240614
        if not isinstance(v, LocationDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `LocationDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: RescheduleReasonDefaultFieldOutput20240614
        if not isinstance(v, RescheduleReasonDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `RescheduleReasonDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: TitleDefaultFieldOutput20240614
        if not isinstance(v, TitleDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `TitleDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: NotesDefaultFieldOutput20240614
        if not isinstance(v, NotesDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `NotesDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: GuestsDefaultFieldOutput20240614
        if not isinstance(v, GuestsDefaultFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `GuestsDefaultFieldOutput20240614`")
        else:
            match += 1
        # validate data type: PhoneFieldOutput20240614
        if not isinstance(v, PhoneFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `PhoneFieldOutput20240614`")
        else:
            match += 1
        # validate data type: AddressFieldOutput20240614
        if not isinstance(v, AddressFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `AddressFieldOutput20240614`")
        else:
            match += 1
        # validate data type: TextFieldOutput20240614
        if not isinstance(v, TextFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `TextFieldOutput20240614`")
        else:
            match += 1
        # validate data type: NumberFieldOutput20240614
        if not isinstance(v, NumberFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `NumberFieldOutput20240614`")
        else:
            match += 1
        # validate data type: TextAreaFieldOutput20240614
        if not isinstance(v, TextAreaFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `TextAreaFieldOutput20240614`")
        else:
            match += 1
        # validate data type: SelectFieldOutput20240614
        if not isinstance(v, SelectFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `SelectFieldOutput20240614`")
        else:
            match += 1
        # validate data type: MultiSelectFieldOutput20240614
        if not isinstance(v, MultiSelectFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `MultiSelectFieldOutput20240614`")
        else:
            match += 1
        # validate data type: MultiEmailFieldOutput20240614
        if not isinstance(v, MultiEmailFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `MultiEmailFieldOutput20240614`")
        else:
            match += 1
        # validate data type: CheckboxGroupFieldOutput20240614
        if not isinstance(v, CheckboxGroupFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `CheckboxGroupFieldOutput20240614`")
        else:
            match += 1
        # validate data type: RadioGroupFieldOutput20240614
        if not isinstance(v, RadioGroupFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `RadioGroupFieldOutput20240614`")
        else:
            match += 1
        # validate data type: BooleanFieldOutput20240614
        if not isinstance(v, BooleanFieldOutput20240614):
            error_messages.append(f"Error! Input type `{type(v)}` is not `BooleanFieldOutput20240614`")
        else:
            match += 1
        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when setting `actual_instance` in EventTypeOutput20240614BookingFieldsInner with oneOf schemas: AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when setting `actual_instance` in EventTypeOutput20240614BookingFieldsInner with oneOf schemas: AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614. Details: " + ", ".join(error_messages))
        else:
            return v

    @classmethod
    def from_dict(cls, obj: Union[str, Dict[str, Any]]) -> Self:
        return cls.from_json(json.dumps(obj))

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Returns the object represented by the json string"""
        instance = cls.model_construct()
        error_messages = []
        match = 0

        # deserialize data into NameDefaultFieldOutput20240614
        try:
            instance.actual_instance = NameDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into EmailDefaultFieldOutput20240614
        try:
            instance.actual_instance = EmailDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into LocationDefaultFieldOutput20240614
        try:
            instance.actual_instance = LocationDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into RescheduleReasonDefaultFieldOutput20240614
        try:
            instance.actual_instance = RescheduleReasonDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into TitleDefaultFieldOutput20240614
        try:
            instance.actual_instance = TitleDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into NotesDefaultFieldOutput20240614
        try:
            instance.actual_instance = NotesDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into GuestsDefaultFieldOutput20240614
        try:
            instance.actual_instance = GuestsDefaultFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into PhoneFieldOutput20240614
        try:
            instance.actual_instance = PhoneFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into AddressFieldOutput20240614
        try:
            instance.actual_instance = AddressFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into TextFieldOutput20240614
        try:
            instance.actual_instance = TextFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into NumberFieldOutput20240614
        try:
            instance.actual_instance = NumberFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into TextAreaFieldOutput20240614
        try:
            instance.actual_instance = TextAreaFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into SelectFieldOutput20240614
        try:
            instance.actual_instance = SelectFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into MultiSelectFieldOutput20240614
        try:
            instance.actual_instance = MultiSelectFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into MultiEmailFieldOutput20240614
        try:
            instance.actual_instance = MultiEmailFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into CheckboxGroupFieldOutput20240614
        try:
            instance.actual_instance = CheckboxGroupFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into RadioGroupFieldOutput20240614
        try:
            instance.actual_instance = RadioGroupFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))
        # deserialize data into BooleanFieldOutput20240614
        try:
            instance.actual_instance = BooleanFieldOutput20240614.from_json(json_str)
            match += 1
        except (ValidationError, ValueError) as e:
            error_messages.append(str(e))

        if match > 1:
            # more than 1 match
            raise ValueError("Multiple matches found when deserializing the JSON string into EventTypeOutput20240614BookingFieldsInner with oneOf schemas: AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614. Details: " + ", ".join(error_messages))
        elif match == 0:
            # no match
            raise ValueError("No match found when deserializing the JSON string into EventTypeOutput20240614BookingFieldsInner with oneOf schemas: AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614. Details: " + ", ".join(error_messages))
        else:
            return instance

    def to_json(self) -> str:
        """Returns the JSON representation of the actual instance"""
        if self.actual_instance is None:
            return "null"

        if hasattr(self.actual_instance, "to_json") and callable(self.actual_instance.to_json):
            return self.actual_instance.to_json()
        else:
            return json.dumps(self.actual_instance)

    def to_dict(self) -> Optional[Union[Dict[str, Any], AddressFieldOutput20240614, BooleanFieldOutput20240614, CheckboxGroupFieldOutput20240614, EmailDefaultFieldOutput20240614, GuestsDefaultFieldOutput20240614, LocationDefaultFieldOutput20240614, MultiEmailFieldOutput20240614, MultiSelectFieldOutput20240614, NameDefaultFieldOutput20240614, NotesDefaultFieldOutput20240614, NumberFieldOutput20240614, PhoneFieldOutput20240614, RadioGroupFieldOutput20240614, RescheduleReasonDefaultFieldOutput20240614, SelectFieldOutput20240614, TextAreaFieldOutput20240614, TextFieldOutput20240614, TitleDefaultFieldOutput20240614]]:
        """Returns the dict representation of the actual instance"""
        if self.actual_instance is None:
            return None

        if hasattr(self.actual_instance, "to_dict") and callable(self.actual_instance.to_dict):
            return self.actual_instance.to_dict()
        else:
            # primitive type
            return self.actual_instance

    def to_str(self) -> str:
        """Returns the string representation of the actual instance"""
        return pprint.pformat(self.model_dump())


