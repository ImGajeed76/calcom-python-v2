# coding: utf-8

"""
    Cal.com API v2

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_phone_call_input import CreatePhoneCallInput

class TestCreatePhoneCallInput(unittest.TestCase):
    """CreatePhoneCallInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreatePhoneCallInput:
        """Test CreatePhoneCallInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreatePhoneCallInput`
        """
        model = CreatePhoneCallInput()
        if include_optional:
            return CreatePhoneCallInput(
                your_phone_number = '+680728880015',
                number_to_call = '+680728880015',
                cal_api_key = '',
                enabled = None,
                template_type = 'CUSTOM_TEMPLATE',
                scheduler_name = '',
                guest_name = '',
                guest_email = '',
                guest_company = '',
                begin_message = '',
                general_prompt = ''
            )
        else:
            return CreatePhoneCallInput(
                your_phone_number = '+680728880015',
                number_to_call = '+680728880015',
                cal_api_key = '',
                enabled = None,
                template_type = 'CUSTOM_TEMPLATE',
        )
        """

    def testCreatePhoneCallInput(self):
        """Test CreatePhoneCallInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
