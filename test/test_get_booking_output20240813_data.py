# coding: utf-8

"""
    Cal.com API v2

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_booking_output20240813_data import GetBookingOutput20240813Data

class TestGetBookingOutput20240813Data(unittest.TestCase):
    """GetBookingOutput20240813Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBookingOutput20240813Data:
        """Test GetBookingOutput20240813Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBookingOutput20240813Data`
        """
        model = GetBookingOutput20240813Data()
        if include_optional:
            return GetBookingOutput20240813Data(
                id = 456,
                uid = 'recurring_uid_123',
                title = 'Recurring meeting',
                description = 'Learn how to integrate scheduling into marketplace.',
                hosts = [
                    openapi_client.models.host.Host(
                        user_id = 1.337, 
                        mandatory = True, 
                        priority = 'lowest', )
                    ],
                status = 'pending',
                cancellation_reason = 'Event was cancelled',
                rescheduling_reason = 'Event was rescheduled',
                rescheduled_from_uid = 'previous_recurring_uid_123',
                start = '2024-08-13T15:30:00Z',
                end = '2024-08-13T16:30:00Z',
                duration = 30,
                event_type_id = 50,
                event_type = openapi_client.models.event_type.EventType(
                    id = 1, 
                    slug = 'some-event', ),
                attendees = [
                    openapi_client.models.attendee.Attendee(
                        name = 'John Doe', 
                        email = 'john.doe@example.com', 
                        time_zone = 'America/New_York', 
                        language = 'en', )
                    ],
                guests = [guest3@example.com, guest4@example.com],
                meeting_url = 'https://example.com/recurring-meeting',
                location = 'https://example.com/recurring-meeting',
                absent_host = False,
                booking_fields_responses = {customField=customValue},
                recurring_booking_uid = 'recurring_uid_987'
            )
        else:
            return GetBookingOutput20240813Data(
                id = 456,
                uid = 'recurring_uid_123',
                title = 'Recurring meeting',
                description = 'Learn how to integrate scheduling into marketplace.',
                hosts = [
                    openapi_client.models.host.Host(
                        user_id = 1.337, 
                        mandatory = True, 
                        priority = 'lowest', )
                    ],
                status = 'pending',
                start = '2024-08-13T15:30:00Z',
                end = '2024-08-13T16:30:00Z',
                duration = 30,
                event_type_id = 50,
                event_type = openapi_client.models.event_type.EventType(
                    id = 1, 
                    slug = 'some-event', ),
                attendees = [
                    openapi_client.models.attendee.Attendee(
                        name = 'John Doe', 
                        email = 'john.doe@example.com', 
                        time_zone = 'America/New_York', 
                        language = 'en', )
                    ],
                absent_host = False,
                recurring_booking_uid = 'recurring_uid_987',
        )
        """

    def testGetBookingOutput20240813Data(self):
        """Test GetBookingOutput20240813Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
