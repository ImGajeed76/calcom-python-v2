# coding: utf-8

"""
    Cal.com API v2

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.connected_calendars_output import ConnectedCalendarsOutput

class TestConnectedCalendarsOutput(unittest.TestCase):
    """ConnectedCalendarsOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectedCalendarsOutput:
        """Test ConnectedCalendarsOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectedCalendarsOutput`
        """
        model = ConnectedCalendarsOutput()
        if include_optional:
            return ConnectedCalendarsOutput(
                status = 'success',
                data = openapi_client.models.connected_calendars_data.ConnectedCalendarsData(
                    connected_calendars = [
                        openapi_client.models.connected_calendar.ConnectedCalendar(
                            integration = openapi_client.models.integration.Integration(
                                app_data = openapi_client.models.app_data.appData(), 
                                dir_name = '', 
                                __template = '', 
                                name = '', 
                                description = '', 
                                installed = True, 
                                type = '', 
                                title = '', 
                                variant = '', 
                                category = '', 
                                categories = [
                                    ''
                                    ], 
                                logo = '', 
                                publisher = '', 
                                slug = '', 
                                url = '', 
                                email = '', 
                                location_option = openapi_client.models.location_option.locationOption(), ), 
                            credential_id = 1.337, 
                            primary = openapi_client.models.primary.Primary(
                                external_id = '', 
                                name = '', 
                                primary = True, 
                                read_only = True, 
                                email = '', 
                                is_selected = True, 
                                credential_id = 1.337, ), 
                            calendars = [
                                openapi_client.models.calendar.Calendar(
                                    external_id = '', 
                                    name = '', 
                                    read_only = True, 
                                    email = '', 
                                    is_selected = True, 
                                    credential_id = 1.337, )
                                ], )
                        ], 
                    destination_calendar = openapi_client.models.destination_calendar.DestinationCalendar(
                        id = 1.337, 
                        integration = '', 
                        external_id = '', 
                        primary_email = '', 
                        user_id = 1.337, 
                        event_type_id = 1.337, 
                        credential_id = 1.337, 
                        name = '', 
                        read_only = True, 
                        email = '', 
                        integration_title = '', ), )
            )
        else:
            return ConnectedCalendarsOutput(
                status = 'success',
                data = openapi_client.models.connected_calendars_data.ConnectedCalendarsData(
                    connected_calendars = [
                        openapi_client.models.connected_calendar.ConnectedCalendar(
                            integration = openapi_client.models.integration.Integration(
                                app_data = openapi_client.models.app_data.appData(), 
                                dir_name = '', 
                                __template = '', 
                                name = '', 
                                description = '', 
                                installed = True, 
                                type = '', 
                                title = '', 
                                variant = '', 
                                category = '', 
                                categories = [
                                    ''
                                    ], 
                                logo = '', 
                                publisher = '', 
                                slug = '', 
                                url = '', 
                                email = '', 
                                location_option = openapi_client.models.location_option.locationOption(), ), 
                            credential_id = 1.337, 
                            primary = openapi_client.models.primary.Primary(
                                external_id = '', 
                                name = '', 
                                primary = True, 
                                read_only = True, 
                                email = '', 
                                is_selected = True, 
                                credential_id = 1.337, ), 
                            calendars = [
                                openapi_client.models.calendar.Calendar(
                                    external_id = '', 
                                    name = '', 
                                    read_only = True, 
                                    email = '', 
                                    is_selected = True, 
                                    credential_id = 1.337, )
                                ], )
                        ], 
                    destination_calendar = openapi_client.models.destination_calendar.DestinationCalendar(
                        id = 1.337, 
                        integration = '', 
                        external_id = '', 
                        primary_email = '', 
                        user_id = 1.337, 
                        event_type_id = 1.337, 
                        credential_id = 1.337, 
                        name = '', 
                        read_only = True, 
                        email = '', 
                        integration_title = '', ), ),
        )
        """

    def testConnectedCalendarsOutput(self):
        """Test ConnectedCalendarsOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
